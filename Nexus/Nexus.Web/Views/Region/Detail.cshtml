@model Nexus.Web.Models.RegionViewModel

<div class="container">
    <h2 class="mt-4">Region Details</h2>

    <!-- Panel de recursos -->
    <div class="card bg-light mb-4">
        <div class="card-body">
            <h5 class="card-title">Current Resources</h5>
            <div class="row">
                @foreach (var resource in Model.Region.RegionResources)
                {
                    <div class="col-md-2 text-center">
                        <strong>@resource.Resource.Name:</strong> @resource.Quantity
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="card mt-4 mb-4">
        <div class="card-body">
            <h4 class="card-title">Planet: @Model.Region.Planet.Id</h4>
            <p class="card-text"><strong>Colonized:</strong> @Model.Region.IsColonized</p>
        </div>
    </div>

    <h3>Districts</h3>

    <div class="accordion" id="districtsAccordion">
        @foreach (var district in Model.Districts)
        {
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading-@district.Id">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@district.Id" aria-expanded="false" aria-controls="collapse-@district.Id">
                        @district.Name
                    </button>
                </h2>
                <div id="collapse-@district.Id" class="accordion-collapse collapse" aria-labelledby="heading-@district.Id" data-bs-parent="#districtsAccordion">
                    <div class="accordion-body">
                        <ul class="list-group">
                            @foreach (var structure in Model.Structures.Where(s => s.DistrictId == district.Id))
                            {
                                var regionStructure = Model.RegionStructures.FirstOrDefault(rs => rs.StructureId == structure.Id);
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <h5 class="mb-1">
                                            @structure.Name
                                            @if (regionStructure != null && regionStructure.Level > 0 && regionStructure.Structure.Mine != null)
                                            {
                                                <span class="badge bg-success rounded-pill">Level @regionStructure.Level</span>
                                            } else if (regionStructure != null && regionStructure.Level > 0)
                                            {
                                                <span class="badge bg-success rounded-pill">Built</span>
                                            }
                                        </h5>
                                        <p class="mb-1">@structure.Description</p>
                                    </div>
                                    <div>
                                        @if (regionStructure != null && regionStructure.UpgradedAt.HasValue)
                                        {
                                            <span class="badge bg-warning text-dark rounded-pill">
                                                Upgrading until: @regionStructure.UpgradedAt.Value.ToLocalTime().ToString("g")
                                            </span>
                                        }
                                        else if (regionStructure != null && regionStructure.Structure.Mine != null)
                                        {
                                            <form asp-action="BuildOrUpgradeStructure" method="post">
                                                <input type="hidden" name="regionId" value="@Model.Region.Id" />
                                                <input type="hidden" name="structureId" value="@structure.Id" />
                                                <button type="submit" class="btn btn-secondary btn-sm ms-2">Upgrade</button>
                                            </form>
                                        }
                                        else if (regionStructure == null)
                                        {
                                            <form asp-action="BuildOrUpgradeStructure" method="post">
                                                <input type="hidden" name="regionId" value="@Model.Region.Id" />
                                                <input type="hidden" name="structureId" value="@structure.Id" />
                                                <button type="submit" class="btn btn-primary btn-sm ms-2">Build</button>
                                            </form>
                                        }
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger mt-4">
            @TempData["ErrorMessage"]
        </div>
    }
    @if (TempData["ToastMessage"] != null)
    {
        <div class="toast show align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    @TempData["ToastMessage"]
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var toastElement = document.querySelector('.toast');
                var toast = new bootstrap.Toast(toastElement);
                toast.show();
            });
        </script>
    }
</div>
