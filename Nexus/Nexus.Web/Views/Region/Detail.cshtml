@using Nexus.Domain.Entities
@model Nexus.Web.Models.RegionViewModel

<div class="container">
    <h2 class="mt-4">Region Details</h2>
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger mt-4">
            @TempData["ErrorMessage"]
        </div>
    }

    <!-- Panel de recursos -->
    <div class="card bg-dark mb-4">
        <div class="card-body">
            <h5 class="card-title">Current Resources</h5>
            <div class="row">
                @foreach (var resource in Model.Region.RegionResources)
                {
                    <div class="col-md-2 text-center">
                        <strong>@resource.Resource.Name:</strong> @resource.Quantity
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="card mt-4 mb-4">
        <div class="card-body">
            <!-- Button to trigger the Set Governor modal -->
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#governorModal">Set Governor</button>
        </div>
        <!-- Botón para ver el sistema solar -->
        <a href="@Url.Action("Detail", "SolarSystem", new { id = Model.Region.Planet.SolarSystemId })" class="btn btn-info mb-4">
            Ver Sistema Solar
        </a>
    </div>

    <h3>Structures</h3>
    <div class="row">
        @foreach (var structure in Model.Structures)
        {
            var regionStructure = Model.RegionStructures.FirstOrDefault(rs => rs.StructureId == structure.Id) ?? new RegionStructure { Structure = structure, RegionId = Model.Region.Id, StructureId = structure.Id };
            <div class="col-md-4 mb-4">
                @await Html.PartialAsync("_RegionStructureCard", regionStructure)
            </div>
        }
    </div>

    <!-- Modal for selecting a governor card -->
    <div class="modal fade" id="governorModal" tabindex="-1" aria-labelledby="governorModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="governorModalLabel">Select Governor</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body d-flex justify-content-center">
                    <div class="governor-card-container d-flex justify-content-center flex-wrap">
                        @foreach (Card card in Model.GovernorCards)
                        {
                            <div class="governor-card mx-2 mb-4" data-card-id="@card.Id" onclick="selectGovernorCard(this)">
                                <img src="/images/@card.ImageUrl" class="card-img-top" alt="@card.Name" />
                                <div class="card-body">
                                    <h5 class="card-title">@card.Name</h5>
                                    <p class="card-text">@card.Description</p>
                                </div>
                            </div>
                        }
                        @if (!Model.GovernorCards.Any())
                        {
                            <p>No available Governor cards</p>
                        }
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" id="confirmGovernorBtn" class="btn btn-primary" disabled onclick="confirmGovernor()">Confirm</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast for success message -->
    <div id="successToast" class="toast align-items-center text-bg-success position-fixed bottom-0 end-0 m-3 border-0" role="alert" aria-live="assertive" aria-atomic="true" style="display: none;">
        <div class="d-flex">
            <div class="toast-body">
                Governor assigned successfully!
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>

    <script>
        let selectedGovernorId = null;

        function selectGovernorCard(cardElement) {
            $('.governor-card').removeClass('selected-governor');
            $(cardElement).addClass('selected-governor');
            selectedGovernorId = $(cardElement).data('card-id');
            $('#confirmGovernorBtn').prop('disabled', false);
        }

        function confirmGovernor() {
            const regionId = @Model.Region.Id;

            $.post('/Region/SetGovernor', { regionId: regionId, cardId: selectedGovernorId }, function (response) {
                if (response.success) {
                    $('#governorModal').modal('hide');

                    $('#successToast').show();
                    var toastElement = document.getElementById('successToast');
                    var toast = new bootstrap.Toast(toastElement);
                    toast.show();
                } else {
                    toastr.error(response.message);
                }
            }).fail(function (error) {
                toastr.error('An error occurred while setting the governor.');
            });
        }
    </script>

    <!-- Additional CSS for styling the modal and cards -->
    <style>
        #governorModal .governor-card-container { max-width: 100%; }
        #governorModal .governor-card { width: 190px; cursor: pointer; transition: box-shadow 0.3s ease; }
            #governorModal .governor-card img { max-height: 200px; object-fit: cover; width: 100%; border-radius: 15px; }
            #governorModal .governor-card .card-body { padding: 10px; }
            #governorModal .governor-card.selected-governor { box-shadow: 0px 0px 15px 5px rgba(0, 123, 255, 0.7); }

        #successToast { position: fixed; bottom: 20px; right: 20px; z-index: 1055; }</style>
