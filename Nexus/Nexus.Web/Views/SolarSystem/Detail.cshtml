@model Nexus.Web.Models.SolarSystemViewModel

<div class="container">
    <h2>Detalle del sistema solar: @Model.SolarSystem.Name</h2>

    <div id="solarSystemGrid">
        @for (int y = 1; y <= Model.SolarSystem.GridSizeY; y++)
        {
            @for (int x = 1; x <= Model.SolarSystem.GridSizeX; x++)
            {
                var cellClass = "solar-system-cell";
                var cellContent = "";
                var dataItemId = "";

                // Estrella en el centro del sistema solar
                if (x == Model.SolarSystem.GridSizeX / 2 + 1 && y == Model.SolarSystem.GridSizeY / 2 + 1)
                {
                    cellClass += " estrella";
                    cellContent = "Estrella";
                }
                else
                {
                    // Planetas, campos de asteroides y puertas de salto
                    var planet = Model.SolarSystem.Planets.FirstOrDefault(p => p.CoordinateX == x && p.CoordinateY == y);
                    var asteroid = Model.SolarSystem.AsteroidFields.FirstOrDefault(a => a.CoordinateX == x && a.CoordinateY == y);
                    var jumpGate = Model.SolarSystem.JumpGates.FirstOrDefault(j => j.CoordinateX == x && j.CoordinateY == y);

                    if (planet != null)
                    {
                        cellClass += " planet";
                        cellContent = "Planeta";
                        dataItemId = planet.Id.ToString();
                    }
                    else if (asteroid != null)
                    {
                        cellClass += " asteroidfield";
                        cellContent = "Campo de asteroides";
                        dataItemId = asteroid.Id.ToString();
                    }
                    else if (jumpGate != null)
                    {
                        cellClass += " jumppoint";
                        cellContent = "Puerta de salto";
                        dataItemId = jumpGate.Id.ToString();
                    }
                }

                <div class="@cellClass" data-item-id="@dataItemId">
                    @cellContent
                </div>
            }
        }
    </div>
</div>

@section Styles {
    <style>
        /* Configuración general del fondo */
        body { background-image: url('https://i.pinimg.com/originals/1a/ba/73/1aba73d7d0cf7299158082fab3d8bfa3.jpg'); background-size: cover; background-attachment: fixed; margin: 0; padding: 0; color: white; }

        /* Estilos del contenedor del sistema solar */
        #solarSystemGrid { display: grid; grid-template-columns: repeat(@Model.SolarSystem.GridSizeX, 1fr); grid-template-rows: repeat(@Model.SolarSystem.GridSizeY, 1fr); }

        /* Estilos de las celdas del grid */
        .solar-system-cell { height: 75px; border: 1px solid #ffffff80; display: flex; justify-content: center; align-items: center; background-color: rgba(0, 0, 0, 0.5); text-align: center; color: white; }

            /* Estilo para planetas */
            .solar-system-cell.planet { background-color: rgba(0, 123, 255, 0.3); /* Fondo azul claro */ }

            /* Estilo para campos de asteroides */
            .solar-system-cell.asteroidfield { background-color: rgba(128, 128, 128, 0.3); /* Fondo gris */ }

            /* Estilo para puertas de salto */
            .solar-system-cell.jumppoint { background-color: rgba(255, 165, 0, 0.3); /* Fondo naranja */ }

            /* Estilo especial para la estrella */
            .solar-system-cell.estrella { background-color: rgba(255, 255, 0, 0.3); /* Fondo amarillo claro */ }
    </style>
}
