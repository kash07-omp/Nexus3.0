// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nexus.Infrastructure.Data;

#nullable disable

namespace Nexus.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240925161807_FixRegionSeedData")]
    partial class FixRegionSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CardUser", b =>
                {
                    b.Property<int>("CardsId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CardsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserCards", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Nexus.Domain.Entities.AsteroidField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CoordinateX")
                        .HasColumnType("float");

                    b.Property<double>("CoordinateY")
                        .HasColumnType("float");

                    b.Property<int>("SolarSystemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolarSystemId");

                    b.ToTable("AsteroidField");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            CoordinateX = 1.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 1
                        },
                        new
                        {
                            Id = 7,
                            CoordinateX = 2.0,
                            CoordinateY = 4.0,
                            SolarSystemId = 1
                        },
                        new
                        {
                            Id = 14,
                            CoordinateX = 4.0,
                            CoordinateY = 2.0,
                            SolarSystemId = 2
                        },
                        new
                        {
                            Id = 15,
                            CoordinateX = 2.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 2
                        },
                        new
                        {
                            Id = 23,
                            CoordinateX = 3.0,
                            CoordinateY = 5.0,
                            SolarSystemId = 3
                        },
                        new
                        {
                            Id = 24,
                            CoordinateX = 7.0,
                            CoordinateY = 8.0,
                            SolarSystemId = 3
                        },
                        new
                        {
                            Id = 28,
                            CoordinateX = 1.0,
                            CoordinateY = 7.0,
                            SolarSystemId = 4
                        },
                        new
                        {
                            Id = 29,
                            CoordinateX = 2.0,
                            CoordinateY = 7.0,
                            SolarSystemId = 4
                        },
                        new
                        {
                            Id = 30,
                            CoordinateX = 1.0,
                            CoordinateY = 5.0,
                            SolarSystemId = 4
                        },
                        new
                        {
                            Id = 34,
                            CoordinateX = 6.0,
                            CoordinateY = 7.0,
                            SolarSystemId = 5
                        },
                        new
                        {
                            Id = 35,
                            CoordinateX = 7.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 5
                        },
                        new
                        {
                            Id = 42,
                            CoordinateX = 5.0,
                            CoordinateY = 9.0,
                            SolarSystemId = 6
                        },
                        new
                        {
                            Id = 43,
                            CoordinateX = 3.0,
                            CoordinateY = 2.0,
                            SolarSystemId = 6
                        },
                        new
                        {
                            Id = 50,
                            CoordinateX = 2.0,
                            CoordinateY = 11.0,
                            SolarSystemId = 7
                        },
                        new
                        {
                            Id = 51,
                            CoordinateX = 3.0,
                            CoordinateY = 11.0,
                            SolarSystemId = 7
                        },
                        new
                        {
                            Id = 68,
                            CoordinateX = 5.0,
                            CoordinateY = 2.0,
                            SolarSystemId = 9
                        },
                        new
                        {
                            Id = 77,
                            CoordinateX = 1.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 10
                        },
                        new
                        {
                            Id = 78,
                            CoordinateX = 7.0,
                            CoordinateY = 4.0,
                            SolarSystemId = 10
                        });
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardRarity")
                        .HasColumnType("int");

                    b.Property<int>("CardType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cards", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardRarity = 0,
                            CardType = 0,
                            Description = "A well-known governor focused on boosting production at all costs.",
                            ImageUrl = "https://art.ngfiles.com/images/374000/374499_unknowndepths_sci-fi-card-template-example-01-rear.jpg?f1440462500",
                            Name = "Kily Gavin"
                        },
                        new
                        {
                            Id = 2,
                            CardRarity = 0,
                            CardType = 0,
                            Description = "An efficient governor known for reducing the time to complete projects.",
                            ImageUrl = "https://art.ngfiles.com/images/374000/374499_unknowndepths_sci-fi-card-template-example-01-rear.jpg?f1440462500",
                            Name = "Faster Krate"
                        });
                });

            modelBuilder.Entity("Nexus.Domain.Entities.CardBonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BonusType")
                        .HasColumnType("int");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<int?>("StructureId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("StructureId");

                    b.ToTable("CardBonuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BonusType = 1,
                            CardId = 1,
                            Description = "Increases the production output of the mineral mine by 20%.",
                            Percentage = 20,
                            StructureId = 2,
                            Title = "Production Boost: Minerals"
                        },
                        new
                        {
                            Id = 2,
                            BonusType = 1,
                            CardId = 1,
                            Description = "Increases the production output of the microchip factory by 15%.",
                            Percentage = 15,
                            StructureId = 3,
                            Title = "Production Boost: Microchips"
                        },
                        new
                        {
                            Id = 3,
                            BonusType = 2,
                            CardId = 1,
                            Description = "Increases energy consumption of the mineral mine by 10%.",
                            Percentage = 10,
                            StructureId = 2,
                            Title = "Increased Energy Consumption"
                        },
                        new
                        {
                            Id = 4,
                            BonusType = 0,
                            CardId = 2,
                            Description = "Reduces construction time for all structures in the region by 30%.",
                            Percentage = -30,
                            Title = "Construction Time Reduction"
                        });
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Fleet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdmiralCardId")
                        .HasColumnType("int");

                    b.Property<double>("CoordinateX")
                        .HasColumnType("float");

                    b.Property<double>("CoordinateY")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SolarSystemId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AdmiralCardId");

                    b.HasIndex("SolarSystemId");

                    b.HasIndex("UserId");

                    b.ToTable("Fleet");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.JumpGate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CoordinateX")
                        .HasColumnType("float");

                    b.Property<double>("CoordinateY")
                        .HasColumnType("float");

                    b.Property<int>("SolarSystemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolarSystemId");

                    b.ToTable("JumpGate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoordinateX = 4.0,
                            CoordinateY = 5.0,
                            SolarSystemId = 1
                        },
                        new
                        {
                            Id = 2,
                            CoordinateX = 6.0,
                            CoordinateY = 2.0,
                            SolarSystemId = 2
                        },
                        new
                        {
                            Id = 3,
                            CoordinateX = 7.0,
                            CoordinateY = 7.0,
                            SolarSystemId = 3
                        },
                        new
                        {
                            Id = 4,
                            CoordinateX = 4.0,
                            CoordinateY = 5.0,
                            SolarSystemId = 4
                        },
                        new
                        {
                            Id = 5,
                            CoordinateX = 4.0,
                            CoordinateY = 5.0,
                            SolarSystemId = 5
                        },
                        new
                        {
                            Id = 6,
                            CoordinateX = 9.0,
                            CoordinateY = 4.0,
                            SolarSystemId = 6
                        },
                        new
                        {
                            Id = 7,
                            CoordinateX = 9.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 7
                        },
                        new
                        {
                            Id = 8,
                            CoordinateX = 5.0,
                            CoordinateY = 8.0,
                            SolarSystemId = 8
                        },
                        new
                        {
                            Id = 9,
                            CoordinateX = 9.0,
                            CoordinateY = 9.0,
                            SolarSystemId = 9
                        },
                        new
                        {
                            Id = 10,
                            CoordinateX = 10.0,
                            CoordinateY = 4.0,
                            SolarSystemId = 10
                        });
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Mine", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GainMultiplier")
                        .HasPrecision(18)
                        .HasColumnType("int");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("Mines", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Code = "MINERALS_MINE",
                            GainMultiplier = 200,
                            ResourceId = 1
                        },
                        new
                        {
                            Id = (short)2,
                            Code = "MICROCHIPS_FACTORY",
                            GainMultiplier = 170,
                            ResourceId = 2
                        },
                        new
                        {
                            Id = (short)3,
                            Code = "HYDROGEN_MINE",
                            GainMultiplier = 140,
                            ResourceId = 3
                        },
                        new
                        {
                            Id = (short)4,
                            Code = "ENERGY_GENERATOR",
                            GainMultiplier = 170,
                            ResourceId = 7
                        },
                        new
                        {
                            Id = (short)5,
                            Code = "NUCLEAR_REACTOR",
                            GainMultiplier = 210,
                            ResourceId = 7
                        },
                        new
                        {
                            Id = (short)6,
                            Code = "FOOD_FARM",
                            GainMultiplier = 150,
                            ResourceId = 4
                        });
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CoordinateX")
                        .HasColumnType("float");

                    b.Property<double>("CoordinateY")
                        .HasColumnType("float");

                    b.Property<int>("SolarSystemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolarSystemId");

                    b.ToTable("Planets", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoordinateX = 2.0,
                            CoordinateY = 9.0,
                            SolarSystemId = 1
                        },
                        new
                        {
                            Id = 2,
                            CoordinateX = 7.0,
                            CoordinateY = 8.0,
                            SolarSystemId = 1
                        },
                        new
                        {
                            Id = 3,
                            CoordinateX = 1.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 1
                        },
                        new
                        {
                            Id = 4,
                            CoordinateX = 6.0,
                            CoordinateY = 3.0,
                            SolarSystemId = 1
                        },
                        new
                        {
                            Id = 5,
                            CoordinateX = 4.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 1
                        },
                        new
                        {
                            Id = 8,
                            CoordinateX = 7.0,
                            CoordinateY = 5.0,
                            SolarSystemId = 2
                        },
                        new
                        {
                            Id = 9,
                            CoordinateX = 8.0,
                            CoordinateY = 11.0,
                            SolarSystemId = 2
                        },
                        new
                        {
                            Id = 10,
                            CoordinateX = 10.0,
                            CoordinateY = 4.0,
                            SolarSystemId = 2
                        },
                        new
                        {
                            Id = 11,
                            CoordinateX = 1.0,
                            CoordinateY = 11.0,
                            SolarSystemId = 2
                        },
                        new
                        {
                            Id = 12,
                            CoordinateX = 2.0,
                            CoordinateY = 9.0,
                            SolarSystemId = 2
                        },
                        new
                        {
                            Id = 13,
                            CoordinateX = 5.0,
                            CoordinateY = 11.0,
                            SolarSystemId = 2
                        },
                        new
                        {
                            Id = 16,
                            CoordinateX = 9.0,
                            CoordinateY = 8.0,
                            SolarSystemId = 3
                        },
                        new
                        {
                            Id = 17,
                            CoordinateX = 8.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 3
                        },
                        new
                        {
                            Id = 18,
                            CoordinateX = 1.0,
                            CoordinateY = 3.0,
                            SolarSystemId = 3
                        },
                        new
                        {
                            Id = 19,
                            CoordinateX = 1.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 3
                        },
                        new
                        {
                            Id = 20,
                            CoordinateX = 7.0,
                            CoordinateY = 5.0,
                            SolarSystemId = 3
                        },
                        new
                        {
                            Id = 21,
                            CoordinateX = 5.0,
                            CoordinateY = 8.0,
                            SolarSystemId = 3
                        },
                        new
                        {
                            Id = 22,
                            CoordinateX = 1.0,
                            CoordinateY = 9.0,
                            SolarSystemId = 3
                        },
                        new
                        {
                            Id = 25,
                            CoordinateX = 7.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 4
                        },
                        new
                        {
                            Id = 26,
                            CoordinateX = 1.0,
                            CoordinateY = 2.0,
                            SolarSystemId = 4
                        },
                        new
                        {
                            Id = 27,
                            CoordinateX = 6.0,
                            CoordinateY = 2.0,
                            SolarSystemId = 4
                        },
                        new
                        {
                            Id = 31,
                            CoordinateX = 3.0,
                            CoordinateY = 2.0,
                            SolarSystemId = 5
                        },
                        new
                        {
                            Id = 32,
                            CoordinateX = 2.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 5
                        },
                        new
                        {
                            Id = 33,
                            CoordinateX = 5.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 5
                        },
                        new
                        {
                            Id = 36,
                            CoordinateX = 7.0,
                            CoordinateY = 9.0,
                            SolarSystemId = 6
                        },
                        new
                        {
                            Id = 37,
                            CoordinateX = 8.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 6
                        },
                        new
                        {
                            Id = 38,
                            CoordinateX = 5.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 6
                        },
                        new
                        {
                            Id = 39,
                            CoordinateX = 7.0,
                            CoordinateY = 3.0,
                            SolarSystemId = 6
                        },
                        new
                        {
                            Id = 40,
                            CoordinateX = 3.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 6
                        },
                        new
                        {
                            Id = 41,
                            CoordinateX = 2.0,
                            CoordinateY = 8.0,
                            SolarSystemId = 6
                        },
                        new
                        {
                            Id = 44,
                            CoordinateX = 11.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 7
                        },
                        new
                        {
                            Id = 45,
                            CoordinateX = 4.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 7
                        },
                        new
                        {
                            Id = 46,
                            CoordinateX = 10.0,
                            CoordinateY = 11.0,
                            SolarSystemId = 7
                        },
                        new
                        {
                            Id = 47,
                            CoordinateX = 6.0,
                            CoordinateY = 5.0,
                            SolarSystemId = 7
                        },
                        new
                        {
                            Id = 48,
                            CoordinateX = 2.0,
                            CoordinateY = 5.0,
                            SolarSystemId = 7
                        },
                        new
                        {
                            Id = 49,
                            CoordinateX = 8.0,
                            CoordinateY = 7.0,
                            SolarSystemId = 7
                        },
                        new
                        {
                            Id = 52,
                            CoordinateX = 6.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 8
                        },
                        new
                        {
                            Id = 53,
                            CoordinateX = 9.0,
                            CoordinateY = 4.0,
                            SolarSystemId = 8
                        },
                        new
                        {
                            Id = 54,
                            CoordinateX = 7.0,
                            CoordinateY = 3.0,
                            SolarSystemId = 8
                        },
                        new
                        {
                            Id = 55,
                            CoordinateX = 3.0,
                            CoordinateY = 5.0,
                            SolarSystemId = 8
                        },
                        new
                        {
                            Id = 56,
                            CoordinateX = 6.0,
                            CoordinateY = 11.0,
                            SolarSystemId = 8
                        },
                        new
                        {
                            Id = 57,
                            CoordinateX = 9.0,
                            CoordinateY = 11.0,
                            SolarSystemId = 8
                        },
                        new
                        {
                            Id = 58,
                            CoordinateX = 9.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 8
                        },
                        new
                        {
                            Id = 59,
                            CoordinateX = 3.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 8
                        },
                        new
                        {
                            Id = 60,
                            CoordinateX = 7.0,
                            CoordinateY = 7.0,
                            SolarSystemId = 8
                        },
                        new
                        {
                            Id = 61,
                            CoordinateX = 3.0,
                            CoordinateY = 9.0,
                            SolarSystemId = 9
                        },
                        new
                        {
                            Id = 62,
                            CoordinateX = 3.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 9
                        },
                        new
                        {
                            Id = 63,
                            CoordinateX = 7.0,
                            CoordinateY = 4.0,
                            SolarSystemId = 9
                        },
                        new
                        {
                            Id = 64,
                            CoordinateX = 1.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 9
                        },
                        new
                        {
                            Id = 65,
                            CoordinateX = 11.0,
                            CoordinateY = 11.0,
                            SolarSystemId = 9
                        },
                        new
                        {
                            Id = 66,
                            CoordinateX = 11.0,
                            CoordinateY = 2.0,
                            SolarSystemId = 9
                        },
                        new
                        {
                            Id = 67,
                            CoordinateX = 8.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 9
                        },
                        new
                        {
                            Id = 69,
                            CoordinateX = 3.0,
                            CoordinateY = 3.0,
                            SolarSystemId = 10
                        },
                        new
                        {
                            Id = 70,
                            CoordinateX = 10.0,
                            CoordinateY = 11.0,
                            SolarSystemId = 10
                        },
                        new
                        {
                            Id = 71,
                            CoordinateX = 4.0,
                            CoordinateY = 9.0,
                            SolarSystemId = 10
                        },
                        new
                        {
                            Id = 72,
                            CoordinateX = 8.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 10
                        },
                        new
                        {
                            Id = 73,
                            CoordinateX = 2.0,
                            CoordinateY = 8.0,
                            SolarSystemId = 10
                        },
                        new
                        {
                            Id = 74,
                            CoordinateX = 6.0,
                            CoordinateY = 6.0,
                            SolarSystemId = 10
                        },
                        new
                        {
                            Id = 75,
                            CoordinateX = 4.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 10
                        },
                        new
                        {
                            Id = 76,
                            CoordinateX = 11.0,
                            CoordinateY = 1.0,
                            SolarSystemId = 10
                        });
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GovernorCardId")
                        .HasColumnType("int");

                    b.Property<bool>("IsColonized")
                        .HasColumnType("bit");

                    b.Property<int>("PlanetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GovernorCardId");

                    b.HasIndex("PlanetId");

                    b.HasIndex("UserId");

                    b.ToTable("Regions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsColonized = false,
                            PlanetId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            IsColonized = false,
                            PlanetId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            IsColonized = false,
                            PlanetId = 1,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            IsColonized = false,
                            PlanetId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            IsColonized = false,
                            PlanetId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            IsColonized = false,
                            PlanetId = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            IsColonized = false,
                            PlanetId = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            IsColonized = false,
                            PlanetId = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            IsColonized = false,
                            PlanetId = 3,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            IsColonized = false,
                            PlanetId = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            IsColonized = false,
                            PlanetId = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            IsColonized = false,
                            PlanetId = 4,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            IsColonized = false,
                            PlanetId = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            IsColonized = false,
                            PlanetId = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            IsColonized = false,
                            PlanetId = 5,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            IsColonized = false,
                            PlanetId = 8,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            IsColonized = false,
                            PlanetId = 8,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            IsColonized = false,
                            PlanetId = 8,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            IsColonized = false,
                            PlanetId = 9,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            IsColonized = false,
                            PlanetId = 9,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            IsColonized = false,
                            PlanetId = 9,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            IsColonized = false,
                            PlanetId = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            IsColonized = false,
                            PlanetId = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            IsColonized = false,
                            PlanetId = 10,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            IsColonized = false,
                            PlanetId = 11,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            IsColonized = false,
                            PlanetId = 11,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            IsColonized = false,
                            PlanetId = 11,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            IsColonized = false,
                            PlanetId = 12,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            IsColonized = false,
                            PlanetId = 12,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            IsColonized = false,
                            PlanetId = 12,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            IsColonized = false,
                            PlanetId = 13,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            IsColonized = false,
                            PlanetId = 13,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            IsColonized = false,
                            PlanetId = 13,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            IsColonized = false,
                            PlanetId = 16,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            IsColonized = false,
                            PlanetId = 16,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            IsColonized = false,
                            PlanetId = 16,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            IsColonized = false,
                            PlanetId = 17,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            IsColonized = false,
                            PlanetId = 17,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            IsColonized = false,
                            PlanetId = 17,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            IsColonized = false,
                            PlanetId = 18,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            IsColonized = false,
                            PlanetId = 18,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            IsColonized = false,
                            PlanetId = 18,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            IsColonized = false,
                            PlanetId = 19,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            IsColonized = false,
                            PlanetId = 19,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            IsColonized = false,
                            PlanetId = 19,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 46,
                            IsColonized = false,
                            PlanetId = 20,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 47,
                            IsColonized = false,
                            PlanetId = 20,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 48,
                            IsColonized = false,
                            PlanetId = 20,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 49,
                            IsColonized = false,
                            PlanetId = 21,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 50,
                            IsColonized = false,
                            PlanetId = 21,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 51,
                            IsColonized = false,
                            PlanetId = 21,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 52,
                            IsColonized = false,
                            PlanetId = 22,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 53,
                            IsColonized = false,
                            PlanetId = 22,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 54,
                            IsColonized = false,
                            PlanetId = 22,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 55,
                            IsColonized = false,
                            PlanetId = 25,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 56,
                            IsColonized = false,
                            PlanetId = 25,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 57,
                            IsColonized = false,
                            PlanetId = 25,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 58,
                            IsColonized = false,
                            PlanetId = 26,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 59,
                            IsColonized = false,
                            PlanetId = 26,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 60,
                            IsColonized = false,
                            PlanetId = 26,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 61,
                            IsColonized = false,
                            PlanetId = 27,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 62,
                            IsColonized = false,
                            PlanetId = 27,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 63,
                            IsColonized = false,
                            PlanetId = 27,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 64,
                            IsColonized = false,
                            PlanetId = 31,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 65,
                            IsColonized = false,
                            PlanetId = 31,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 66,
                            IsColonized = false,
                            PlanetId = 31,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 67,
                            IsColonized = false,
                            PlanetId = 32,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 68,
                            IsColonized = false,
                            PlanetId = 32,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 69,
                            IsColonized = false,
                            PlanetId = 32,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 70,
                            IsColonized = false,
                            PlanetId = 33,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 71,
                            IsColonized = false,
                            PlanetId = 33,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 72,
                            IsColonized = false,
                            PlanetId = 33,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 73,
                            IsColonized = false,
                            PlanetId = 36,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 74,
                            IsColonized = false,
                            PlanetId = 36,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 75,
                            IsColonized = false,
                            PlanetId = 36,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 76,
                            IsColonized = false,
                            PlanetId = 37,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 77,
                            IsColonized = false,
                            PlanetId = 37,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 78,
                            IsColonized = false,
                            PlanetId = 37,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 79,
                            IsColonized = false,
                            PlanetId = 38,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 80,
                            IsColonized = false,
                            PlanetId = 38,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 81,
                            IsColonized = false,
                            PlanetId = 38,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 82,
                            IsColonized = false,
                            PlanetId = 39,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 83,
                            IsColonized = false,
                            PlanetId = 39,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 84,
                            IsColonized = false,
                            PlanetId = 39,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 85,
                            IsColonized = false,
                            PlanetId = 40,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 86,
                            IsColonized = false,
                            PlanetId = 40,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 87,
                            IsColonized = false,
                            PlanetId = 40,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 88,
                            IsColonized = false,
                            PlanetId = 41,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 89,
                            IsColonized = false,
                            PlanetId = 41,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 90,
                            IsColonized = false,
                            PlanetId = 41,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 91,
                            IsColonized = false,
                            PlanetId = 44,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 92,
                            IsColonized = false,
                            PlanetId = 44,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 93,
                            IsColonized = false,
                            PlanetId = 44,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 94,
                            IsColonized = false,
                            PlanetId = 45,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 95,
                            IsColonized = false,
                            PlanetId = 45,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 96,
                            IsColonized = false,
                            PlanetId = 45,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 97,
                            IsColonized = false,
                            PlanetId = 46,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 98,
                            IsColonized = false,
                            PlanetId = 46,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 99,
                            IsColonized = false,
                            PlanetId = 46,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 100,
                            IsColonized = false,
                            PlanetId = 47,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 101,
                            IsColonized = false,
                            PlanetId = 47,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 102,
                            IsColonized = false,
                            PlanetId = 47,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 103,
                            IsColonized = false,
                            PlanetId = 48,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 104,
                            IsColonized = false,
                            PlanetId = 48,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 105,
                            IsColonized = false,
                            PlanetId = 48,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 106,
                            IsColonized = false,
                            PlanetId = 49,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 107,
                            IsColonized = false,
                            PlanetId = 49,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 108,
                            IsColonized = false,
                            PlanetId = 49,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 109,
                            IsColonized = false,
                            PlanetId = 52,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 110,
                            IsColonized = false,
                            PlanetId = 52,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 111,
                            IsColonized = false,
                            PlanetId = 52,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 112,
                            IsColonized = false,
                            PlanetId = 53,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 113,
                            IsColonized = false,
                            PlanetId = 53,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 114,
                            IsColonized = false,
                            PlanetId = 53,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 115,
                            IsColonized = false,
                            PlanetId = 54,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 116,
                            IsColonized = false,
                            PlanetId = 54,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 117,
                            IsColonized = false,
                            PlanetId = 54,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 118,
                            IsColonized = false,
                            PlanetId = 55,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 119,
                            IsColonized = false,
                            PlanetId = 55,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 120,
                            IsColonized = false,
                            PlanetId = 55,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 121,
                            IsColonized = false,
                            PlanetId = 56,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 122,
                            IsColonized = false,
                            PlanetId = 56,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 123,
                            IsColonized = false,
                            PlanetId = 56,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 124,
                            IsColonized = false,
                            PlanetId = 57,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 125,
                            IsColonized = false,
                            PlanetId = 57,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 126,
                            IsColonized = false,
                            PlanetId = 57,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 127,
                            IsColonized = false,
                            PlanetId = 58,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 128,
                            IsColonized = false,
                            PlanetId = 58,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 129,
                            IsColonized = false,
                            PlanetId = 58,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 130,
                            IsColonized = false,
                            PlanetId = 59,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 131,
                            IsColonized = false,
                            PlanetId = 59,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 132,
                            IsColonized = false,
                            PlanetId = 59,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 133,
                            IsColonized = false,
                            PlanetId = 60,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 134,
                            IsColonized = false,
                            PlanetId = 60,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 135,
                            IsColonized = false,
                            PlanetId = 60,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 136,
                            IsColonized = false,
                            PlanetId = 61,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 137,
                            IsColonized = false,
                            PlanetId = 61,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 138,
                            IsColonized = false,
                            PlanetId = 61,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 139,
                            IsColonized = false,
                            PlanetId = 62,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 140,
                            IsColonized = false,
                            PlanetId = 62,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 141,
                            IsColonized = false,
                            PlanetId = 62,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 142,
                            IsColonized = false,
                            PlanetId = 63,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 143,
                            IsColonized = false,
                            PlanetId = 63,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 144,
                            IsColonized = false,
                            PlanetId = 63,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 145,
                            IsColonized = false,
                            PlanetId = 64,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 146,
                            IsColonized = false,
                            PlanetId = 64,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 147,
                            IsColonized = false,
                            PlanetId = 64,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 148,
                            IsColonized = false,
                            PlanetId = 65,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 149,
                            IsColonized = false,
                            PlanetId = 65,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 150,
                            IsColonized = false,
                            PlanetId = 65,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 151,
                            IsColonized = false,
                            PlanetId = 66,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 152,
                            IsColonized = false,
                            PlanetId = 66,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 153,
                            IsColonized = false,
                            PlanetId = 66,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 154,
                            IsColonized = false,
                            PlanetId = 67,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 155,
                            IsColonized = false,
                            PlanetId = 67,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 156,
                            IsColonized = false,
                            PlanetId = 67,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 157,
                            IsColonized = false,
                            PlanetId = 69,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 158,
                            IsColonized = false,
                            PlanetId = 69,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 159,
                            IsColonized = false,
                            PlanetId = 69,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 160,
                            IsColonized = false,
                            PlanetId = 70,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 161,
                            IsColonized = false,
                            PlanetId = 70,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 162,
                            IsColonized = false,
                            PlanetId = 70,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 163,
                            IsColonized = false,
                            PlanetId = 71,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 164,
                            IsColonized = false,
                            PlanetId = 71,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 165,
                            IsColonized = false,
                            PlanetId = 71,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 166,
                            IsColonized = false,
                            PlanetId = 72,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 167,
                            IsColonized = false,
                            PlanetId = 72,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 168,
                            IsColonized = false,
                            PlanetId = 72,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 169,
                            IsColonized = false,
                            PlanetId = 73,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 170,
                            IsColonized = false,
                            PlanetId = 73,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 171,
                            IsColonized = false,
                            PlanetId = 73,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 172,
                            IsColonized = false,
                            PlanetId = 74,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 173,
                            IsColonized = false,
                            PlanetId = 74,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 174,
                            IsColonized = false,
                            PlanetId = 74,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 175,
                            IsColonized = false,
                            PlanetId = 75,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 176,
                            IsColonized = false,
                            PlanetId = 75,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 177,
                            IsColonized = false,
                            PlanetId = 75,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 178,
                            IsColonized = false,
                            PlanetId = 76,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 179,
                            IsColonized = false,
                            PlanetId = 76,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 180,
                            IsColonized = false,
                            PlanetId = 76,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Nexus.Domain.Entities.RegionResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("ResourceId");

                    b.ToTable("RegionResources", (string)null);
                });

            modelBuilder.Entity("Nexus.Domain.Entities.RegionStructure", b =>
                {
                    b.Property<int>("StructureId")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpgradedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("StructureId", "RegionId");

                    b.HasIndex("RegionId");

                    b.ToTable("RegionStructures", (string)null);
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Research", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Researches", (string)null);
                });

            modelBuilder.Entity("Nexus.Domain.Entities.ResearchRequiredResearch", b =>
                {
                    b.Property<int>("ResearchId")
                        .HasColumnType("int");

                    b.Property<int>("RequiredResearchId")
                        .HasColumnType("int");

                    b.Property<int?>("ResearchId1")
                        .HasColumnType("int");

                    b.HasKey("ResearchId", "RequiredResearchId");

                    b.HasIndex("RequiredResearchId");

                    b.HasIndex("ResearchId1");

                    b.ToTable("ResearchRequiredResearch");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.ResearchRequiredStructure", b =>
                {
                    b.Property<int>("ResearchId")
                        .HasColumnType("int");

                    b.Property<int>("RequiredStructureId")
                        .HasColumnType("int");

                    b.Property<int>("RequiredStructureLevel")
                        .HasColumnType("int");

                    b.HasKey("ResearchId", "RequiredStructureId");

                    b.HasIndex("RequiredStructureId");

                    b.ToTable("ResearchRequiredStructure");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Resources", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "MINERALS",
                            Description = "Minerals extracted from the planetary crust. They are the most abundant resource and are mainly used for the creation of structures and ships.",
                            Name = "Minerals"
                        },
                        new
                        {
                            Id = 2,
                            Code = "MICROCHIPS",
                            Description = "Technological materials designed and created with high technology. They are used to a lesser extent than minerals.",
                            Name = "Microchips"
                        },
                        new
                        {
                            Id = 3,
                            Code = "HYDROGEN",
                            Description = "The main fuel for spaceships and is needed in smaller amounts by buildings and ships.",
                            Name = "Hydrogen"
                        },
                        new
                        {
                            Id = 4,
                            Code = "FOOD",
                            Description = "Represents the food supplies. They are necessary to keep the population alive.",
                            Name = "Food"
                        },
                        new
                        {
                            Id = 5,
                            Code = "POPULATION",
                            Description = "The number of inhabitants in each region.",
                            Name = "Population"
                        },
                        new
                        {
                            Id = 6,
                            Code = "CREDITS",
                            Description = "The total money of the empire, obtained from trade treaties, taxes, and conquests. Credits are used to recruit troops, research, and close trade agreements.",
                            Name = "Credits"
                        },
                        new
                        {
                            Id = 7,
                            Code = "ENERGY",
                            Description = "The total energy of the region. This energy powers all the region buildings.",
                            Name = "Energy"
                        });
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FleetId")
                        .HasColumnType("int");

                    b.Property<int>("Function")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FleetId");

                    b.ToTable("Ship");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.SolarSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GridSizeX")
                        .HasColumnType("int");

                    b.Property<int>("GridSizeY")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SolarSystems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GridSizeX = 7,
                            GridSizeY = 7,
                            Name = "Alpha Centauri"
                        },
                        new
                        {
                            Id = 2,
                            GridSizeX = 7,
                            GridSizeY = 7,
                            Name = "Betelgeuse"
                        },
                        new
                        {
                            Id = 3,
                            GridSizeX = 7,
                            GridSizeY = 7,
                            Name = "Sirius"
                        },
                        new
                        {
                            Id = 4,
                            GridSizeX = 7,
                            GridSizeY = 7,
                            Name = "Vega"
                        },
                        new
                        {
                            Id = 5,
                            GridSizeX = 7,
                            GridSizeY = 7,
                            Name = "Rigel"
                        },
                        new
                        {
                            Id = 6,
                            GridSizeX = 7,
                            GridSizeY = 7,
                            Name = "Orion"
                        },
                        new
                        {
                            Id = 7,
                            GridSizeX = 7,
                            GridSizeY = 7,
                            Name = "Cassiopeia"
                        },
                        new
                        {
                            Id = 8,
                            GridSizeX = 7,
                            GridSizeY = 7,
                            Name = "Draco"
                        },
                        new
                        {
                            Id = 9,
                            GridSizeX = 7,
                            GridSizeY = 7,
                            Name = "Andromeda"
                        },
                        new
                        {
                            Id = 10,
                            GridSizeX = 7,
                            GridSizeY = 7,
                            Name = "Taurus"
                        });
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Structure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseChips")
                        .HasColumnType("int");

                    b.Property<int>("BaseCredits")
                        .HasColumnType("int");

                    b.Property<int>("BaseEnergy")
                        .HasColumnType("int");

                    b.Property<int>("BaseHydrogen")
                        .HasColumnType("int");

                    b.Property<int>("BaseMinerales")
                        .HasColumnType("int");

                    b.Property<bool>("CanLevelUp")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short?>("MineId")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MineId");

                    b.ToTable("Structures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseChips = 100,
                            BaseCredits = 1000,
                            BaseEnergy = 0,
                            BaseHydrogen = 50,
                            BaseMinerales = 500,
                            CanLevelUp = false,
                            Description = "The central administrative building where laws are enacted and the region is governed.",
                            Name = "City Hall"
                        },
                        new
                        {
                            Id = 2,
                            BaseChips = 100,
                            BaseCredits = 1000,
                            BaseEnergy = 0,
                            BaseHydrogen = 50,
                            BaseMinerales = 500,
                            CanLevelUp = true,
                            Description = "A mine that extracts essential minerals from the planet’s crust.",
                            MineId = (short)1,
                            Name = "Raw Material Mine"
                        },
                        new
                        {
                            Id = 3,
                            BaseChips = 100,
                            BaseCredits = 1000,
                            BaseEnergy = 0,
                            BaseHydrogen = 50,
                            BaseMinerales = 500,
                            CanLevelUp = true,
                            Description = "A specialized facility for producing advanced microchips needed for high-tech devices.",
                            MineId = (short)2,
                            Name = "Microchip Factory"
                        },
                        new
                        {
                            Id = 4,
                            BaseChips = 100,
                            BaseCredits = 1000,
                            BaseEnergy = 0,
                            BaseHydrogen = 50,
                            BaseMinerales = 500,
                            CanLevelUp = true,
                            Description = "A facility that extracts hydrogen, used as fuel for spacecraft and energy production.",
                            MineId = (short)3,
                            Name = "Hydrogen Mine"
                        },
                        new
                        {
                            Id = 5,
                            BaseChips = 100,
                            BaseCredits = 1000,
                            BaseEnergy = 0,
                            BaseHydrogen = 50,
                            BaseMinerales = 500,
                            CanLevelUp = true,
                            Description = "A generator that produces energy to power the region's infrastructure.",
                            MineId = (short)4,
                            Name = "Energy Generator"
                        },
                        new
                        {
                            Id = 6,
                            BaseChips = 100,
                            BaseCredits = 1000,
                            BaseEnergy = 0,
                            BaseHydrogen = 50,
                            BaseMinerales = 500,
                            CanLevelUp = true,
                            Description = "A powerful reactor that generates large amounts of energy for the region.",
                            MineId = (short)5,
                            Name = "Nuclear Reactor"
                        },
                        new
                        {
                            Id = 7,
                            BaseChips = 100,
                            BaseCredits = 1000,
                            BaseEnergy = 0,
                            BaseHydrogen = 50,
                            BaseMinerales = 500,
                            CanLevelUp = true,
                            Description = "Fields dedicated to agriculture, producing food to sustain the population.",
                            MineId = (short)6,
                            Name = "Farmland"
                        },
                        new
                        {
                            Id = 8,
                            BaseChips = 100,
                            BaseCredits = 1000,
                            BaseEnergy = 0,
                            BaseHydrogen = 50,
                            BaseMinerales = 500,
                            CanLevelUp = true,
                            Description = "Housing complexes that provide homes for the population, increasing happiness.",
                            Name = "Residential Area"
                        },
                        new
                        {
                            Id = 9,
                            BaseChips = 100,
                            BaseCredits = 1000,
                            BaseEnergy = 0,
                            BaseHydrogen = 50,
                            BaseMinerales = 500,
                            CanLevelUp = false,
                            Description = "A facility that allows for the recruitment and maintenance of spacecraft.",
                            Name = "Spaceport"
                        },
                        new
                        {
                            Id = 10,
                            BaseChips = 100,
                            BaseCredits = 1000,
                            BaseEnergy = 0,
                            BaseHydrogen = 50,
                            BaseMinerales = 500,
                            CanLevelUp = false,
                            Description = "A military facility where ground troops are recruited and trained.",
                            Name = "Barracks"
                        },
                        new
                        {
                            Id = 11,
                            BaseChips = 100,
                            BaseCredits = 1000,
                            BaseEnergy = 0,
                            BaseHydrogen = 50,
                            BaseMinerales = 500,
                            CanLevelUp = false,
                            Description = "A hub for scientific research, unlocking new technologies for the region.",
                            Name = "Research Center"
                        });
                });

            modelBuilder.Entity("Nexus.Domain.Entities.StructureRequiredResearch", b =>
                {
                    b.Property<int>("StructureId")
                        .HasColumnType("int");

                    b.Property<int>("RequiredResearchId")
                        .HasColumnType("int");

                    b.Property<int?>("ResearchId")
                        .HasColumnType("int");

                    b.HasKey("StructureId", "RequiredResearchId");

                    b.HasIndex("RequiredResearchId");

                    b.HasIndex("ResearchId");

                    b.ToTable("StructureRequiredResearch");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.StructureRequiredStructure", b =>
                {
                    b.Property<int>("StructureId")
                        .HasColumnType("int");

                    b.Property<int>("RequiredStructureId")
                        .HasColumnType("int");

                    b.Property<int>("RequiredStructureLevel")
                        .HasColumnType("int");

                    b.HasKey("StructureId", "RequiredStructureId");

                    b.HasIndex("RequiredStructureId");

                    b.ToTable("StructureRequiredStructure");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Credits")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CardUser", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Card", null)
                        .WithMany()
                        .HasForeignKey("CardsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nexus.Domain.Entities.AsteroidField", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.SolarSystem", "SolarSystem")
                        .WithMany("AsteroidFields")
                        .HasForeignKey("SolarSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolarSystem");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.CardBonus", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Card", "Card")
                        .WithMany("Bonuses")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.Domain.Entities.Structure", "Structure")
                        .WithMany()
                        .HasForeignKey("StructureId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Card");

                    b.Navigation("Structure");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Fleet", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Card", "AdmiralCard")
                        .WithMany()
                        .HasForeignKey("AdmiralCardId");

                    b.HasOne("Nexus.Domain.Entities.SolarSystem", "SolarSystem")
                        .WithMany("Fleets")
                        .HasForeignKey("SolarSystemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nexus.Domain.Entities.User", "User")
                        .WithMany("Fleets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdmiralCard");

                    b.Navigation("SolarSystem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.JumpGate", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.SolarSystem", "SolarSystem")
                        .WithMany("JumpGates")
                        .HasForeignKey("SolarSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolarSystem");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Mine", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Resource", "Resource")
                        .WithMany("Mines")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Planet", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.SolarSystem", "SolarSystem")
                        .WithMany("Planets")
                        .HasForeignKey("SolarSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolarSystem");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Region", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Card", "GovernorCard")
                        .WithMany()
                        .HasForeignKey("GovernorCardId");

                    b.HasOne("Nexus.Domain.Entities.Planet", "Planet")
                        .WithMany("Regions")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.Domain.Entities.User", "User")
                        .WithMany("Regions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("GovernorCard");

                    b.Navigation("Planet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.RegionResource", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Region", "Region")
                        .WithMany("RegionResources")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.Domain.Entities.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.RegionStructure", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Region", "Region")
                        .WithMany("RegionStructures")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.Domain.Entities.Structure", "Structure")
                        .WithMany()
                        .HasForeignKey("StructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("Structure");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.ResearchRequiredResearch", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Research", "RequiredResearch")
                        .WithMany()
                        .HasForeignKey("RequiredResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.Domain.Entities.Research", "Research")
                        .WithMany()
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Nexus.Domain.Entities.Research", null)
                        .WithMany("ResearchRequiredResearchs")
                        .HasForeignKey("ResearchId1");

                    b.Navigation("RequiredResearch");

                    b.Navigation("Research");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.ResearchRequiredStructure", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Structure", "RequiredStructure")
                        .WithMany()
                        .HasForeignKey("RequiredStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.Domain.Entities.Research", "Research")
                        .WithMany()
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequiredStructure");

                    b.Navigation("Research");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Ship", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Fleet", "Fleet")
                        .WithMany("Ships")
                        .HasForeignKey("FleetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fleet");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Structure", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Mine", "Mine")
                        .WithMany()
                        .HasForeignKey("MineId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Mine");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.StructureRequiredResearch", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Research", "RequiredResearch")
                        .WithMany()
                        .HasForeignKey("RequiredResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.Domain.Entities.Research", null)
                        .WithMany("StructureRequiredResearchs")
                        .HasForeignKey("ResearchId");

                    b.HasOne("Nexus.Domain.Entities.Structure", "Structure")
                        .WithMany()
                        .HasForeignKey("StructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequiredResearch");

                    b.Navigation("Structure");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.StructureRequiredStructure", b =>
                {
                    b.HasOne("Nexus.Domain.Entities.Structure", "RequiredStructure")
                        .WithMany()
                        .HasForeignKey("RequiredStructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.Domain.Entities.Structure", "Structure")
                        .WithMany()
                        .HasForeignKey("StructureId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RequiredStructure");

                    b.Navigation("Structure");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Card", b =>
                {
                    b.Navigation("Bonuses");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Fleet", b =>
                {
                    b.Navigation("Ships");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Planet", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Region", b =>
                {
                    b.Navigation("RegionResources");

                    b.Navigation("RegionStructures");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Research", b =>
                {
                    b.Navigation("ResearchRequiredResearchs");

                    b.Navigation("StructureRequiredResearchs");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.Resource", b =>
                {
                    b.Navigation("Mines");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.SolarSystem", b =>
                {
                    b.Navigation("AsteroidFields");

                    b.Navigation("Fleets");

                    b.Navigation("JumpGates");

                    b.Navigation("Planets");
                });

            modelBuilder.Entity("Nexus.Domain.Entities.User", b =>
                {
                    b.Navigation("Fleets");

                    b.Navigation("Regions");
                });
#pragma warning restore 612, 618
        }
    }
}
